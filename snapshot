#!/bin/bash

DEFAULT_CONFIG_FILE="/etc/snapshot/config"
CONFIG_FILE=$(echo $2)
if [ -z "$CONFIG_FILE" ]
then
    CONFIG_FILE=$DEFAULT_CONFIG_FILE
fi

#PATH_CHANGED=$(grep "PathChanged=" $1)

help () {
    echo "Usage: [update] [config_file]"
    exit
}

update () {
    if [ $# -lt 1 ]
    then
        echo "update() Usage: [config_file]"
    fi

    cat <(echo -e "[Unit]\nDescription=snapshot.sh\n\n[Path]") \
        <(grep "PathChanged=" $1) \
        <(echo -e \
        "\n[Install]\nWantedBy=default.target") > /etc/systemd/system/snapshot.path

    echo -e "[Unit]\nDescription=Backs up files\n\n[Service]\nExecStart=/usr/bin/snapshot service" > /etc/systemd/system/snapshot.service
}

if [ "$1" = "update" ]
then
    update ${CONFIG_FILE}
    exit
fi

if [ "$1" = "service" ]
then
    # Basic snapshot-style rsync backup script 

    SNAP=$(grep "SnapDir=" ${DEFAULT_CONFIG_FILE} | sed -e 's/SnapDir=//' -)
    SRC=$(grep "PathChanged=" ${DEFAULT_CONFIG_FILE} | sed -e 's/PathChanged=//' - | tr '\n' ' ')
    LINK="--link-dest=${SNAP}/last/"
    LAST="${SNAP}/last"
    OPT="-aPh"
    date=`date "+%Y-%b-%d:_%T"`

    # Create new symlink to latest snapshot for the next backup to hardlink
    ln -s "${SNAP}$date" "$LAST"

    # Run rsync to create snapshot
    rsync $OPT $LINK $SRC "${SNAP}$date"

    # Remove symlink to previous snapshot
    rm -f $LAST

    # Create new symlink to latest snapshot for the next backup to hardlink
    ln -s ${SNAP}$date $LAST
    exit
fi

help
